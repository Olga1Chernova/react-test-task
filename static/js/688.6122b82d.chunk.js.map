{"version":3,"file":"static/js/688.6122b82d.chunk.js","mappings":"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","sources":["webpack://react-test-task/./src/modules/AddProductForm/add-product-form.module.scss?2e8b","modules/AddProductForm/initialValues.js","modules/AddProductForm/AddProductForm.jsx","pages/AddProductPage/AddProductPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"add-product-form_form__56MK8\",\"title\":\"add-product-form_title__0HwBG\",\"error\":\"add-product-form_error__z0e1B\",\"label\":\"add-product-form_label__qOg3a\",\"field\":\"add-product-form_field__EsSeT\",\"button\":\"add-product-form_button__MNvHf\"};","export const initialValues = {\n  title: '',\n  author: '',\n  year: '',\n  rating: '',\n  category: '',\n  price: '',\n  description: '',\n  photo: '',\n  stock: '',\n};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport css from './add-product-form.module.scss'\n\nimport { initialValues } from './initialValues';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  author: Yup.string().required('Required'),\n  category: Yup.string().required('Required'),\n  year: Yup.number()\n    .min(1900, 'Must be greater than 1900')\n    .max(\n      new Date().getFullYear(),\n      `Must be less than or equal to ${new Date().getFullYear()}`\n    )\n    .required('Required'),\n  rating: Yup.number()\n    .min(0, 'Must be greater than or equal to 0')\n    .max(5, 'Must be less than or equal to 5')\n    .required('Required'),\n  description: Yup.string(),\n  price: Yup.number(),\n  photo: Yup.string(),\n  stock: Yup.number(),\n});\n\nfunction AddProductForm({ onSubmit }) {\n\n  const handleSubmit = (event, formik) => {\n    event.preventDefault();\n    onSubmit(formik.values);\n    formik.resetForm();\n  }\n\n  return (\n    <div>\n      <h2 className={css.title}>Fill in a form to add a product</h2>\n      <Formik initialValues={initialValues} validationSchema={validationSchema}>\n        {formik => (\n          <Form className={css.form} onSubmit={e => handleSubmit(e, formik)}>\n            <div>\n              <label htmlFor=\"title\" className={css.label}>\n                Title\n              </label>\n              <Field\n                type=\"text\"\n                name=\"title\"\n                id=\"name\"\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter a product name\"\n              />\n              <ErrorMessage\n                name=\"title\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"author\" className={css.label}>\n                Author\n              </label>\n              <Field\n                type=\"text\"\n                name=\"author\"\n                id=\"author\"\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter author's name\"\n              />\n              <ErrorMessage\n                name=\"author\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"category\" className={css.label}>\n                Category\n              </label>\n              <Field\n                type=\"text\"\n                name=\"category\"\n                id=\"category\"\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter a product category\"\n              />\n              <ErrorMessage\n                name=\"category\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"year\" className={css.label}>\n                Year\n              </label>\n              <Field\n                type=\"number\"\n                name=\"year\"\n                id=\"year\"\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter a year\"\n              />\n              <ErrorMessage name=\"year\" component=\"div\" className={css.error} />\n            </div>\n            <div>\n              <label htmlFor=\"rating\" className={css.label}>\n                Rating\n              </label>\n              <Field\n                type=\"number\"\n                name=\"rating\"\n                id=\"rating\"\n                step={1}\n                max={5}\n                min={0}\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter a product rating\"\n              />\n              <ErrorMessage\n                name=\"rating\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"price\" className={css.label}>\n                Price\n              </label>\n              <Field\n                min={0}\n                type=\"number\"\n                name=\"price\"\n                id=\"price\"\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter a price\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"stock\" className={css.label}>\n                Stock\n              </label>\n              <Field\n                type=\"number\"\n                name=\"stock\"\n                id=\"stock\"\n                min={0}\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter a stock\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"photo\" className={css.label}>\n                Photo\n              </label>\n              <Field\n                type=\"text\"\n                name=\"photo\"\n                id=\"photo\"\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter a photo link\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"description\" className={css.label}>\n                Description\n              </label>\n              <Field\n                type=\"text\"\n                name=\"description\"\n                id=\"description\"\n                className={css.field}\n                onChange={formik.handleChange}\n                placeholder=\"Enter a description\"\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className={css.button}\n            >\n              Add Product\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default AddProductForm;\n","import { useDispatch } from \"react-redux\";\n\nimport {fetchAddProduct} from 'redux/products/products-operations';\n\n\nimport AddProductForm from \"modules/AddProductForm/AddProductForm\";\n\nconst AddProductPage = () => {\n    const dispatch = useDispatch();\n\n  const onAddProduct = ({ title, author, year, category, rating, price, stock, photo, description }) => {\n      const action = fetchAddProduct({\n        title,\n        author,\n        year,\n        category,\n        rating,\n        price,\n        stock,\n        photo,\n        description,\n      });\n      dispatch(action);\n    };\n\n    return (\n        <AddProductForm onSubmit={onAddProduct}/>\n    )\n}\nexport default AddProductPage;"],"names":["initialValues","title","author","year","rating","category","price","description","photo","stock","validationSchema","Yup","shape","required","min","max","Date","getFullYear","onSubmit","handleSubmit","event","formik","preventDefault","values","resetForm","className","css","e","htmlFor","type","name","id","onChange","handleChange","placeholder","component","step","dispatch","useDispatch","action","fetchAddProduct"],"sourceRoot":""}